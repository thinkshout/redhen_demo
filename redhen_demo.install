<?php

/**
 * @file
 *
 */

module_load_include('inc', 'devel_generate');

/**
 * Implement hook_install_tasks_alter().
 */
function redhen_demo_install_tasks_alter(&$tasks, $install_state) {
  $tasks += array(
    'redhen_demo_post_install' => array(
      'display_name' => st('RedHen Demo Post Install Tasks'),
  ));
}

/**
 * Post install tasks.
 *
 * @param string $install_state 
 */
function redhen_demo_post_install(&$install_state) {
  // Set site name. Have to do this in a post-install task.
  variable_set('site_name',  'National Association of Pet Shelters (CRM Demo)');
  
  // Enable "Superfish" module - not sure why we can't do that from the .info file.
  module_enable(array('superfish'));
  
  include_once 'ts_install_helpers/ts_install_helpers.crud.inc'; // Load helper functions.

  // Set the admin theme. (NOTE: We don't want to enable it.)
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  
  // Enable contrib themes and set the default theme.
  theme_enable(array('adaptivetheme', 'at_commerce'));
  variable_set('theme_default', 'at_commerce');

  // Create "note type" taxonomy terms
  redhen_demo_create_note_type_terms();

  // Create some organizations
  redhen_demo_create_orgs(array('shelter', 'foundation'));

  // Create some contacts
  redhen_demo_create_contacts(array('staff', 'volunteer'));

  // Setup registrations
  // Note: We call this in a post-install task to make sure fields defined in Features are available.
  redhen_demo_registration_setup();
  
  // Setup Main Menu items.
  $coded_menu_items = array(
    'redhen' => array('link_title' => 'Dashboard', 'menu-name' => 'main-menu', 'weight' => -25),
    'redhen/contact' => array('link_title' => 'Search Contacts', 'menu-name' => 'main-menu', 'weight' => -20),
    'redhen/contact/add' => array('link_title' => 'Add contacts', 'menu-name' => 'main-menu', 'weight' => -20, 'parent_path' => 'redhen/contact'),
    'redhen/contact/add/staff' => array('link_title' => 'Add staff', 'menu-name' => 'main-menu', 'weight' => -20, 'parent_path' => 'redhen/contact/add'),
    'redhen/contact/add/volunteer' => array('link_title' => 'Add volunteer', 'menu-name' => 'main-menu', 'weight' => -10, 'parent_path' => 'redhen/contact/add'),
    'redhen/org' => array('link_title' => 'Search Organizations', 'menu-name' => 'main-menu', 'weight' => -10),
    'redhen/org/add' => array('link_title' => 'Add organizations', 'menu-name' => 'main-menu', 'weight' => -20, 'parent_path' => 'redhen/org'),
    'redhen/org/add/shelter' => array('link_title' => 'Add shelter', 'menu-name' => 'main-menu', 'weight' => -15, 'parent_path' => 'redhen/org/add'),
    'redhen/org/add/foundation' => array('link_title' => 'Add foundation', 'menu-name' => 'main-menu', 'weight' => -10, 'parent_path' => 'redhen/org/add'),
  );
  ts_install_helpers_crud_create_menu_items($coded_menu_items);
}

/**
 * Implements hook_install().
 */
function redhen_demo_install() {
  
  // Set up some blocks  
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'visibility' => 0,
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'superfish',
      'delta' => '1',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => 0,
      'region' => 'menu_bar',
      'visibility' => 0,
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_info',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -11,
      'region' => 'draw',
      'visibility' => 0,
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_logo',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -9,
      'region' => 'draw',
      'visibility' => 0,
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen',
      'delta' => 'redhen_about',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -9,
      'region' => 'footer',
      'visibility' => 0,
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_home',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -10,
      'region' => 'highlighted',
      'visibility' => 1,
      'pages' => '<front>',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_listings',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -10,
      'region' => 'highlighted',
      'visibility' => 1,
      'pages' => 'redhen/contact
redhen/org',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_contact',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -10,
      'region' => 'highlighted',
      'visibility' => 1,
      'pages' => 'redhen/contact/*',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_org',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -10,
      'region' => 'highlighted',
      'visibility' => 1,
      'pages' => 'redhen/org/*',
      'cache' => -1,
    ),
    array(
      'module' => 'redhen_features',
      'delta' => 'redhen_registration',
      'theme' => 'at_commerce',
      'status' => 1,
      'weight' => -10,
      'region' => 'highlighted',
      'visibility' => 1,
      'pages' => 'redhen/manage/registrations',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'visibility', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();
}

/**
 * Helper to create contacts
 *
 * @param $bundles
 *   Random bundle will be chosen
 *
 * @param int $number
 */
function redhen_demo_create_contacts($bundles, $number = 60) {
  include_once 'ts_install_helpers/random_data.inc'; // Load randomized contact data.
  
  for($i=0; $i<$number; $i++) {
    $first_name = random_data_first_name();
    $last_name = random_data_last_name();
    $org = random_data_organization();
    $organization = $org['name'];
    $domain = $org['domain'];
    $bundle = $bundles[mt_rand(0, count($bundles)-1)];
    $contact = new RedhenContact(array(
      'type' => $bundle,
      'first_name' => $first_name,
      'last_name' => $last_name,
    ));
    $contact->setEmail(
      strtolower(str_replace(" ", "", $first_name)) . '@' .
      strtolower(str_replace(" ", "", $organization)) . '.' .
      $domain
    );
    $contact->save();
    if ($i >= 0 and $i <10) {
      $note = new RedhenNote(array(
        'type' => 'redhen_note',
        'entity_type' => 'redhen_contact',
        'entity_id' => $contact->contact_id,
        'author_uid' => 1,
      ));
      $note->redhen_note_body[LANGUAGE_NONE][0]['value'] = devel_generate_word(mt_rand(5, 20));
      $note->redhen_note_type[LANGUAGE_NONE][0]['tid'] = rand(1,3);
      $note->save();
    }
  }
}

/**
 * Helper to create orgs
 *
 * @param $bundles
 *   Random bundle will be chosen
 *
 * @param int $number
 */
function redhen_demo_create_orgs($bundles, $number = 50) {
  for($i=0; $i < $number; $i++) {
    $bundle = $bundles[mt_rand(0, count($bundles)-1)];
    $org = new RedhenOrg(array(
      'type' => $bundle,
      'label' => devel_generate_word(mt_rand(5, 20)),
    ));
    $org->save();
    if ($i >= 0 and $i <10) {
      $note = new RedhenNote(array(
        'type' => 'redhen_note',
        'entity_type' => 'redhen_org',
        'entity_id' => $org->org_id,
        'author_uid' => 1,
      ));
      $note->redhen_note_body[LANGUAGE_NONE][0]['value'] = devel_generate_word(mt_rand(5, 20));
      $note->redhen_note_type[LANGUAGE_NONE][0]['tid'] = rand(1,3);
      $note->save();
    }
  }
}

/*
 * Create note type terms
 */
function redhen_demo_create_note_type_terms() {
  $note_type_taxonomy = taxonomy_vocabulary_machine_name_load('note_type');
  
  $terms = array('Phone call', 'Email', 'Meeting notes');
  
  foreach ($terms as $termname) {
    $term = new stdClass();
    $term->name = $termname;
    $term->vid = $note_type_taxonomy->vid;
    taxonomy_term_save($term);
  }
}

/**
 * Setup redhen registration stuff.
 */
function redhen_demo_registration_setup() {
  for($i=1; $i<4; $i++) {
    // First create event nodes.
    $node = new stdClass();
    $node->type = 'event';
    node_object_prepare($node);
    $node->title = 'Sample Event ' . $i;
    $node->language = LANGUAGE_NONE;
    $node->body[LANGUAGE_NONE][0]['value'] = devel_create_content();
    $node->body[LANGUAGE_NONE][0]['format'] = 'plain_text';
    $node->uid = 1;
    $node->field_registration[LANGUAGE_NONE][0]['registration_type'] = 'registration_type_1';
    node_save($node);
    // The save registration settings for these event nodes.
    $fields = array(
      'status' => 1,
      'capacity' => 0,
      'settings' => serialize(array(
        'multiple_registrations' => 'multiple_registrations',
        'from_address' => variable_get('site_mail', ini_get('sendmail_from')),
      )),
    );
    registration_update_entity_settings($node->nid, 'node', $fields);
  }
}