<?php
/**
 * @file
 * Code for the RedHen Features feature.
 */

include_once('redhen_features.features.inc');

/**
 * Implements hook_block_info().
 */
function redhen_features_block_info() {
  $blocks['redhen_info'] = array(
    'info' => t('Origin of RedHen CRM'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_logo'] = array(
    'info' => t('RedHen CRM logo'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_home'] = array(
    'info' => t('RedHen Homepage Info'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_listings'] = array(
    'info' => t('RedHen Info on EFQ-based listings'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_contact'] = array(
    'info' => t('RedHen Info on Contact Records'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_org'] = array(
    'info' => t('RedHen Info on Contact Records'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_registration'] = array(
    'info' => t('RedHen Info on Registrations'), 
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['redhen_about'] = array(
    'info' => t('About RedHen CRM'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function redhen_features_block_view($delta = '') {
  
  $rh_logo = '/' . drupal_get_path('module', 'redhen_features') . '/misc/redhen_logo_small.png';
  $ts_logo = '/' . drupal_get_path('module', 'redhen_features') . '/misc/thinkshout_logo.png';
    
  $block = array();

  switch ($delta) {
    case 'redhen_info':
      $block['subject'] = t('');
      $block['content'] = '<h2><a href="http://redhencrm.com">RedHen CRM</a> is brought to you by <a href="http://thinkshout.com">ThinkShout</a>.</h2><p>We help progressive organizations achieve their goals by leveraging open source technologies. Our motivation comes from knowing our clients make the world a better place.</p>';
      break;

    case 'redhen_logo':
      $block['subject'] = t('');
      $block['content'] = '<div><a href="http://thinkshout.com"><img src="' . $ts_logo . '" /></a><a href="http://redhencrm.com"><img src="' . $rh_logo . '" /></a></div>';
      break;

    case 'redhen_home':
      $block['subject'] = t('');
      $block['content'] = '<p>In this <b>RedHen CRM demonstration</b>, we show how the framework could be leveraged to build an association management system supporting a fictional organization: The National Association of Pet Shelters.</p><p>In this example, we have created two different types (or in <em>Drupal speak</em> "entity bundles") of individual contact records - one for shelter staff and another for volunteers, each with its own unique set of fields. Similarly, we have created two different types of organization records - one for the shelters themselves and another for foundations that support the work of these organizations. We can then leverage RedHen to show the connections between these contact and organization records, as well as to manage both individual and organizational memberships within our fictional association.</p>';
      break;
    
    case 'redhen_listings':
      $block['subject'] = t('EFQ-based listings');
      $block['content'] = '<p>The filterable list below leverages the new <b>Entity Field Query</b> (EFQ) approach in Drupal 7 rather than the Views module. <em>In fact, the core RedHen CRM feature set does not depend on Views at all.</em> Of course, RedHen supports Views and Rules integration through its reliance on the Entity API - and you can extend your own instance of RedHen with Views and Rules quite easily.</p><p>Why doesn\'t RedHen rely on Views? Well, for two very different reasons. First, for experienced Drupal developers looking to build complex add-ons to RedHen, we felt that Views-based interfaces were more difficult to extend programmatically than interfaces based on EFQ. Second, for non-developers, we\'ve found that the EFQ approach simplifies the process of extending RedHen. For an example of this, check out the filter form below. When Drupal fields are added to a RedHen entity bundle through the Fields UI, they are automatically exposed as filter options our listing pages.</p>';
      break;

    case 'redhen_contact':
      $menu_item = menu_get_item();
      if ($menu_item['path'] == 'redhen/contact/%') {
        $block['subject'] = t('Working with individual contacts');
        $block['content'] = '<p>RedHen supports a rapidly growing suite of CRM tools. Check out the tools below for managing contact records. With RedHen, you can manage the following information about individual contacts:<ul><li>Manage an unlimited number of data fields about your contacts;</li><li>Link CRM contacts with Drupal user accounts;</li><li>Create <em>connections</em> between contacts as well as between contacts and organizations;</li><li>Add your own custom fields to these connections that further describe these relationships;</li><li>Create and manage memberships;</li><li>Create custom notes that track interactions with contacts</li><li>Track and score <em>online engagement</em> of these contacts; and</li><li>Track event registrations.</li></ul></p>';
      }
      break;
          
    case 'redhen_org':
      $menu_item = menu_get_item();
      if ($menu_item['path'] == 'redhen/org/%') {
        $block['subject'] = t('Working with organizations');
        $block['content'] = '<p>RedHen supports a rapidly growing suite of CRM tools. Check out the tools below for managing organization records. With RedHen, you can manage the following information about organizations:<ul><li>Manage an unlimited number of data fields about your organizations;</li><li>Create <em>connections</em> between organiations as well as between contacts and organizations;</li><li>Add your own custom fields to these connections that further describe these relationships;</li><li>Create and manage organizational memberships;</li><li>Create custom notes that track interactions with organizations</li></ul></p>';
      }
      break;

    case 'redhen_registration':
      $block['subject'] = t('Working with registrations');
      $block['content'] = '<p>RedHen CRM integrates seemlessly with Drupal\'s <a href="http://drupal.org/project/registration">Entity Registrations</a> module - because, well, we wrote that module too. With Entity Registrations, you can create your own unique registration forms that leverage the Fields module. These registration forms (or, in Drupal speak, "registration entity bundles") can be added to your own custom event pages.</p><p>The Entity Registrations module allows for both authenticated and unauthenticated event registrations. What\'s interesting about this is that RedHen CRM can track unauthenticated event registrations by the registrant\'s email address. This feature demonstrates the real power of RedHen CRM as an association management tool, as RedHen allows you to track interactions with website visitors - without requiring them to first log into your site.</p><p>Click on an event below to explore the registration workflow - and remember, registrations are fieldable!</p>';
      break;

    case 'redhen_about':
      $block['content'] = '<p><a href="http://drupal.org/project/redhen">RedHen CRM</a> is an open source CRM <em>framework</em> built natively in <a href="http://drupal.org">Drupal</a>. RedHen CRM is packed with <a href="http://en.wikipedia.org/wiki/Association_management_system">association management</a> (AMS) features for managing detailed information on contacts and organizations, membership services, event registrations, and constituent engagement.</p>';
      break;
    }
      
  return $block;
}
